%% script generated at {2016,6,19} {20,18,55}
{script,
    {"random_tweets","0.0.1"},
    [{preLoaded,
         [erl_prim_loader,erlang,erts_internal,init,otp_ring0,prim_eval,
          prim_file,prim_inet,prim_zip,zlib]},
     {progress,preloaded},
     {path,["$ROOT/lib/kernel-4.2/ebin","$ROOT/lib/stdlib-2.8/ebin"]},
     {primLoad,[error_handler]},
     {kernel_load_completed},
     {progress,kernel_load_completed},
     {path,["$ROOT/lib/kernel-4.2/ebin"]},
     {primLoad,
         [application,application_controller,application_master,
          application_starter,auth,code,code_server,disk_log,disk_log_1,
          disk_log_server,disk_log_sup,dist_ac,dist_util,erl_boot_server,
          erl_ddll,erl_distribution,erl_epmd,erl_reply,error_logger,
          erts_debug,file,file_io_server,file_server,gen_sctp,gen_tcp,gen_udp,
          global,global_group,global_search,group,heart,hipe_unified_loader,
          inet,inet6_sctp,inet6_tcp,inet6_tcp_dist,inet6_udp,inet_config,
          inet_db,inet_dns,inet_gethost_native,inet_hosts,inet_parse,inet_res,
          inet_sctp,inet_tcp,inet_tcp_dist,inet_udp,kernel,kernel_config,net,
          net_adm,net_kernel,os,pg2,ram_file,rpc,seq_trace,standard_error,
          user,user_drv,user_sup,wrap_log_reader]},
     {path,["$ROOT/lib/stdlib-2.8/ebin"]},
     {primLoad,
         [array,base64,beam_lib,binary,c,calendar,dets,dets_server,dets_sup,
          dets_utils,dets_v8,dets_v9,dict,digraph,digraph_utils,edlin,
          edlin_expand,epp,erl_anno,erl_bits,erl_compile,erl_eval,
          erl_expand_records,erl_internal,erl_lint,erl_parse,erl_posix_msg,
          erl_pp,erl_scan,erl_tar,error_logger_file_h,error_logger_tty_h,
          escript,ets,eval_bits,file_sorter,filelib,filename,gb_sets,gb_trees,
          gen,gen_event,gen_fsm,gen_server,io,io_lib,io_lib_format,
          io_lib_fread,io_lib_pretty,lib,lists,log_mf_h,maps,math,
          ms_transform,orddict,ordsets,otp_internal,pool,proc_lib,proplists,
          qlc,qlc_pt,queue,rand,random,re,sets,shell,shell_default,slave,sofs,
          string,supervisor,supervisor_bridge,sys,timer,unicode,win32reg,zip]},
     {path,["$ROOT/lib/compiler-6.0.3/ebin"]},
     {primLoad,
         [beam_a,beam_asm,beam_block,beam_bool,beam_bsm,beam_clean,beam_dead,
          beam_dict,beam_disasm,beam_except,beam_flatten,beam_jump,
          beam_listing,beam_opcodes,beam_peep,beam_receive,beam_split,
          beam_trim,beam_type,beam_utils,beam_validator,beam_z,cerl,
          cerl_clauses,cerl_inline,cerl_sets,cerl_trees,compile,core_lib,
          core_lint,core_parse,core_pp,core_scan,erl_bifs,rec_env,
          sys_core_dsetel,sys_core_fold,sys_core_fold_lists,sys_core_inline,
          sys_pre_attributes,sys_pre_expand,v3_codegen,v3_core,v3_kernel,
          v3_kernel_pp,v3_life]},
     {path,["$ROOT/lib/elixir-1.2.6/ebin"]},
     {primLoad,
         ['Elixir.Access','Elixir.Agent','Elixir.Agent.Server',
          'Elixir.Application','Elixir.ArgumentError',
          'Elixir.ArithmeticError','Elixir.Atom','Elixir.BadArityError',
          'Elixir.BadFunctionError','Elixir.BadMapError',
          'Elixir.BadStructError','Elixir.Base','Elixir.Behaviour',
          'Elixir.Bitwise','Elixir.CaseClauseError','Elixir.Code',
          'Elixir.Code.LoadError','Elixir.Collectable',
          'Elixir.Collectable.BitString','Elixir.Collectable.File.Stream',
          'Elixir.Collectable.HashDict','Elixir.Collectable.HashSet',
          'Elixir.Collectable.IO.Stream','Elixir.Collectable.List',
          'Elixir.Collectable.Map','Elixir.Collectable.MapSet',
          'Elixir.CompileError','Elixir.CondClauseError','Elixir.Dict',
          'Elixir.Enum','Elixir.Enum.EmptyError',
          'Elixir.Enum.OutOfBoundsError','Elixir.Enumerable',
          'Elixir.Enumerable.File.Stream','Elixir.Enumerable.Function',
          'Elixir.Enumerable.GenEvent.Stream','Elixir.Enumerable.HashDict',
          'Elixir.Enumerable.HashSet','Elixir.Enumerable.IO.Stream',
          'Elixir.Enumerable.List','Elixir.Enumerable.Map',
          'Elixir.Enumerable.MapSet','Elixir.Enumerable.Range',
          'Elixir.Enumerable.Stream','Elixir.ErlangError','Elixir.Exception',
          'Elixir.File','Elixir.File.CopyError','Elixir.File.Error',
          'Elixir.File.Stat','Elixir.File.Stream','Elixir.Float',
          'Elixir.FunctionClauseError','Elixir.GenEvent',
          'Elixir.GenEvent.Stream','Elixir.GenServer','Elixir.HashDict',
          'Elixir.HashSet','Elixir.IO','Elixir.IO.ANSI','Elixir.IO.ANSI.Docs',
          'Elixir.IO.ANSI.Sequence','Elixir.IO.Stream',
          'Elixir.IO.StreamError','Elixir.Inspect','Elixir.Inspect.Algebra',
          'Elixir.Inspect.Any','Elixir.Inspect.Atom',
          'Elixir.Inspect.BitString','Elixir.Inspect.Error',
          'Elixir.Inspect.Float','Elixir.Inspect.Function',
          'Elixir.Inspect.HashDict','Elixir.Inspect.HashSet',
          'Elixir.Inspect.Integer','Elixir.Inspect.List','Elixir.Inspect.Map',
          'Elixir.Inspect.MapSet','Elixir.Inspect.Opts','Elixir.Inspect.PID',
          'Elixir.Inspect.Port','Elixir.Inspect.Range',
          'Elixir.Inspect.Reference','Elixir.Inspect.Regex',
          'Elixir.Inspect.Stream','Elixir.Inspect.Tuple',
          'Elixir.Inspect.Version','Elixir.Inspect.Version.Requirement',
          'Elixir.Integer','Elixir.Kernel','Elixir.Kernel.CLI',
          'Elixir.Kernel.ErrorHandler','Elixir.Kernel.LexicalTracker',
          'Elixir.Kernel.ParallelCompiler','Elixir.Kernel.ParallelRequire',
          'Elixir.Kernel.SpecialForms','Elixir.Kernel.Typespec',
          'Elixir.Kernel.Utils','Elixir.KeyError','Elixir.Keyword',
          'Elixir.List','Elixir.List.Chars','Elixir.List.Chars.Atom',
          'Elixir.List.Chars.BitString','Elixir.List.Chars.Float',
          'Elixir.List.Chars.Integer','Elixir.List.Chars.List','Elixir.Macro',
          'Elixir.Macro.Env','Elixir.Map','Elixir.MapSet','Elixir.MatchError',
          'Elixir.Module','Elixir.Module.LocalsTracker','Elixir.Node',
          'Elixir.OptionParser','Elixir.Path','Elixir.Path.Wildcard',
          'Elixir.Port','Elixir.Process','Elixir.Protocol',
          'Elixir.Protocol.UndefinedError','Elixir.Range','Elixir.Record',
          'Elixir.Record.Extractor','Elixir.Regex',
          'Elixir.Regex.CompileError','Elixir.RuntimeError','Elixir.Set',
          'Elixir.Stream','Elixir.Stream.Reducers','Elixir.String',
          'Elixir.String.Break','Elixir.String.Casing','Elixir.String.Chars',
          'Elixir.String.Chars.Atom','Elixir.String.Chars.BitString',
          'Elixir.String.Chars.Float','Elixir.String.Chars.Integer',
          'Elixir.String.Chars.List','Elixir.String.Chars.URI',
          'Elixir.String.Chars.Version',
          'Elixir.String.Chars.Version.Requirement',
          'Elixir.String.Normalizer','Elixir.String.Unicode',
          'Elixir.StringIO','Elixir.Supervisor','Elixir.Supervisor.Default',
          'Elixir.Supervisor.Spec','Elixir.SyntaxError','Elixir.System',
          'Elixir.SystemLimitError','Elixir.Task','Elixir.Task.Supervised',
          'Elixir.Task.Supervisor','Elixir.TokenMissingError',
          'Elixir.TryClauseError','Elixir.Tuple','Elixir.URI',
          'Elixir.UndefinedFunctionError','Elixir.UnicodeConversionError',
          'Elixir.Version','Elixir.Version.InvalidRequirementError',
          'Elixir.Version.InvalidVersionError','Elixir.Version.Parser',
          'Elixir.Version.Parser.DSL','Elixir.Version.Requirement',elixir,
          elixir_aliases,elixir_bitstring,elixir_bootstrap,elixir_clauses,
          elixir_code_server,elixir_compiler,elixir_config,elixir_counter,
          elixir_def,elixir_def_defaults,elixir_def_overridable,
          elixir_dispatch,elixir_env,elixir_errors,elixir_exp,
          elixir_exp_clauses,elixir_fn,elixir_for,elixir_import,
          elixir_interpolation,elixir_lexical,elixir_locals,elixir_map,
          elixir_module,elixir_parser,elixir_quote,elixir_rewrite,
          elixir_scope,elixir_sup,elixir_tokenizer,elixir_translator,
          elixir_try,elixir_utils,elixir_with]},
     {path,["$ROOT/lib/poison-1.5.2/ebin"]},
     {primLoad,
         ['Elixir.Poison','Elixir.Poison.Decode','Elixir.Poison.Decoder',
          'Elixir.Poison.Decoder.Any','Elixir.Poison.Encode',
          'Elixir.Poison.EncodeError','Elixir.Poison.Encoder',
          'Elixir.Poison.Encoder.Any','Elixir.Poison.Encoder.Atom',
          'Elixir.Poison.Encoder.BitString','Elixir.Poison.Encoder.Float',
          'Elixir.Poison.Encoder.HashDict','Elixir.Poison.Encoder.HashSet',
          'Elixir.Poison.Encoder.Integer','Elixir.Poison.Encoder.List',
          'Elixir.Poison.Encoder.Map','Elixir.Poison.Encoder.Range',
          'Elixir.Poison.Encoder.Stream','Elixir.Poison.Parser',
          'Elixir.Poison.Pretty','Elixir.Poison.SyntaxError']},
     {path,["$ROOT/lib/crypto-3.6.3/ebin"]},
     {primLoad,[crypto,crypto_ec_curves]},
     {path,["$ROOT/lib/asn1-4.0.2/ebin"]},
     {primLoad,[asn1rt,asn1rt_nif]},
     {path,["$ROOT/lib/public_key-1.1.1/ebin"]},
     {primLoad,
         ['OTP-PUB-KEY','PKCS-FRAME',pubkey_cert,pubkey_cert_records,
          pubkey_crl,pubkey_pbe,pubkey_pem,pubkey_ssh,public_key]},
     {path,["$ROOT/lib/ssl-7.3/ebin"]},
     {primLoad,
         [dtls,dtls_connection,dtls_connection_sup,dtls_handshake,dtls_record,
          dtls_v1,inet6_tls_dist,inet_tls_dist,ssl,ssl_alert,ssl_app,
          ssl_certificate,ssl_cipher,ssl_config,ssl_connection,ssl_crl,
          ssl_crl_cache,ssl_crl_cache_api,ssl_dist_sup,ssl_handshake,
          ssl_listen_tracker_sup,ssl_manager,ssl_pkix_db,ssl_record,
          ssl_session,ssl_session_cache,ssl_session_cache_api,ssl_socket,
          ssl_srp_primes,ssl_sup,ssl_tls_dist_proxy,ssl_v2,ssl_v3,tls,
          tls_connection,tls_connection_sup,tls_handshake,tls_record,tls_v1]},
     {path,["$ROOT/lib/inets-6.2/ebin"]},
     {primLoad,
         [ftp,ftp_progress,ftp_response,ftp_sup,http_chunk,http_request,
          http_response,http_transport,http_uri,http_util,httpc,httpc_cookie,
          httpc_handler,httpc_handler_sup,httpc_manager,httpc_profile_sup,
          httpc_request,httpc_response,httpc_sup,httpd,httpd_acceptor,
          httpd_acceptor_sup,httpd_cgi,httpd_conf,httpd_connection_sup,
          httpd_custom,httpd_custom_api,httpd_esi,httpd_example,httpd_file,
          httpd_instance_sup,httpd_log,httpd_manager,httpd_misc_sup,
          httpd_request,httpd_request_handler,httpd_response,httpd_script_env,
          httpd_socket,httpd_sup,httpd_util,inets,inets_app,inets_lib,
          inets_service,inets_sup,inets_time_compat,inets_trace,mod_actions,
          mod_alias,mod_auth,mod_auth_dets,mod_auth_mnesia,mod_auth_plain,
          mod_auth_server,mod_browser,mod_cgi,mod_dir,mod_disk_log,mod_esi,
          mod_get,mod_head,mod_htaccess,mod_log,mod_range,mod_responsecontrol,
          mod_security,mod_security_server,mod_trace,tftp,tftp_binary,
          tftp_engine,tftp_file,tftp_lib,tftp_logger,tftp_sup]},
     {path,["$ROOT/lib/extwitter-0.7.1/ebin"]},
     {primLoad,
         ['Elixir.ExTwitter','Elixir.ExTwitter.API.Auth',
          'Elixir.ExTwitter.API.Base','Elixir.ExTwitter.API.DirectMessages',
          'Elixir.ExTwitter.API.Favorites',
          'Elixir.ExTwitter.API.FriendsAndFollowers',
          'Elixir.ExTwitter.API.Help','Elixir.ExTwitter.API.Lists',
          'Elixir.ExTwitter.API.PlacesAndGeo','Elixir.ExTwitter.API.Search',
          'Elixir.ExTwitter.API.Streaming',
          'Elixir.ExTwitter.API.Streaming.AsyncRequest',
          'Elixir.ExTwitter.API.Timelines','Elixir.ExTwitter.API.Trends',
          'Elixir.ExTwitter.API.Tweets','Elixir.ExTwitter.API.Users',
          'Elixir.ExTwitter.Config','Elixir.ExTwitter.ConnectionError',
          'Elixir.ExTwitter.Error','Elixir.ExTwitter.JSON',
          'Elixir.ExTwitter.Model.AccessToken',
          'Elixir.ExTwitter.Model.Cursor',
          'Elixir.ExTwitter.Model.DeletedTweet',
          'Elixir.ExTwitter.Model.DirectMessage',
          'Elixir.ExTwitter.Model.Entities','Elixir.ExTwitter.Model.Geo',
          'Elixir.ExTwitter.Model.Limit','Elixir.ExTwitter.Model.List',
          'Elixir.ExTwitter.Model.Place',
          'Elixir.ExTwitter.Model.RequestToken',
          'Elixir.ExTwitter.Model.StallWarning',
          'Elixir.ExTwitter.Model.Trend','Elixir.ExTwitter.Model.Tweet',
          'Elixir.ExTwitter.Model.Upload','Elixir.ExTwitter.Model.User',
          'Elixir.ExTwitter.OAuth','Elixir.ExTwitter.Parser',
          'Elixir.ExTwitter.Proxy','Elixir.ExTwitter.RateLimitExceededError',
          'Elixir.ExTwitter.Supervisor']},
     {path,["$ROOT/lib/oauth-1.5.0/ebin"]},
     {primLoad,[oauth]},
     {path,["$ROOT/lib/combine-0.8.0/ebin"]},
     {primLoad,
         ['Elixir.Combine','Elixir.Combine.Helpers',
          'Elixir.Combine.ParserState','Elixir.Combine.Parsers.Base',
          'Elixir.Combine.Parsers.Binary','Elixir.Combine.Parsers.Text']},
     {path,["$ROOT/lib/logger-1.2.6/ebin"]},
     {primLoad,
         ['Elixir.Logger','Elixir.Logger.App',
          'Elixir.Logger.Backends.Console','Elixir.Logger.Config',
          'Elixir.Logger.ErrorHandler','Elixir.Logger.Formatter',
          'Elixir.Logger.Translator','Elixir.Logger.Utils',
          'Elixir.Logger.Watcher']},
     {path,["$ROOT/lib/gettext-0.11.0/ebin"]},
     {primLoad,
         ['Elixir.Gettext','Elixir.Gettext.Backend','Elixir.Gettext.Compiler',
          'Elixir.Gettext.Error','Elixir.Gettext.Extractor',
          'Elixir.Gettext.ExtractorAgent','Elixir.Gettext.Fuzzy',
          'Elixir.Gettext.Interpolation','Elixir.Gettext.Merger',
          'Elixir.Gettext.PO','Elixir.Gettext.PO.Parser',
          'Elixir.Gettext.PO.PluralTranslation',
          'Elixir.Gettext.PO.SyntaxError','Elixir.Gettext.PO.Tokenizer',
          'Elixir.Gettext.PO.Translation','Elixir.Gettext.PO.Translations',
          'Elixir.Gettext.Plural','Elixir.Gettext.Plural.UnknownLocaleError',
          'Elixir.Mix.Tasks.Compile.Gettext',
          'Elixir.Mix.Tasks.Gettext.Extract','Elixir.Mix.Tasks.Gettext.Merge',
          gettext_po_parser]},
     {path,["$ROOT/lib/metrics-1.0.1/ebin"]},
     {primLoad,[metrics,metrics_dummy,metrics_exometer,metrics_folsom]},
     {path,["$ROOT/lib/ssl_verify_fun-1.1.0/ebin"]},
     {primLoad,[ssl_verify_fingerprint,ssl_verify_hostname]},
     {path,["$ROOT/lib/certifi-0.4.0/ebin"]},
     {primLoad,[certifi,certifi_cacerts,certifi_weakcerts]},
     {path,["$ROOT/lib/mimerl-1.0.2/ebin"]},
     {primLoad,[mimerl]},
     {path,["$ROOT/lib/idna-1.2.0/ebin"]},
     {primLoad,
         [idna,idna_ucs,idna_unicode,idna_unicode_data1,idna_unicode_data2,
          punycode]},
     {path,["$ROOT/lib/hackney-1.6.0/ebin"]},
     {primLoad,
         [hackney,hackney_app,hackney_bstr,hackney_connect,hackney_cookie,
          hackney_date,hackney_headers,hackney_http,hackney_http_connect,
          hackney_manager,hackney_multipart,hackney_pool,hackney_pool_handler,
          hackney_request,hackney_response,hackney_socks5,
          hackney_ssl_transport,hackney_stream,hackney_sup,
          hackney_tcp_transport,hackney_trace,hackney_url,hackney_util]},
     {path,["$ROOT/lib/tzdata-0.5.8/ebin"]},
     {primLoad,
         ['Elixir.Tzdata','Elixir.Tzdata.App','Elixir.Tzdata.BasicDataMap',
          'Elixir.Tzdata.DataBuilder','Elixir.Tzdata.DataLoader',
          'Elixir.Tzdata.EtsHolder','Elixir.Tzdata.FarFutureDynamicPeriods',
          'Elixir.Tzdata.LeapSecParser','Elixir.Tzdata.Parser',
          'Elixir.Tzdata.ParserOrganizer','Elixir.Tzdata.PeriodBuilder',
          'Elixir.Tzdata.ReleaseReader','Elixir.Tzdata.ReleaseUpdater',
          'Elixir.Tzdata.TableData','Elixir.Tzdata.TableParser',
          'Elixir.Tzdata.Util']},
     {path,["$ROOT/lib/timex-2.1.6/ebin"]},
     {primLoad,
         ['Elixir.Enumerable.Timex.Interval',
          'Elixir.Inspect.Timex.AmbiguousDateTime',
          'Elixir.Inspect.Timex.AmbiguousTimezoneInfo',
          'Elixir.Inspect.Timex.Date','Elixir.Inspect.Timex.DateTime',
          'Elixir.Inspect.Timex.TimezoneInfo','Elixir.Timex',
          'Elixir.Timex.AmbiguousDateTime',
          'Elixir.Timex.AmbiguousTimezoneInfo','Elixir.Timex.Calendar',
          'Elixir.Timex.Calendar.Gregorian','Elixir.Timex.Calendar.Julian',
          'Elixir.Timex.Comparable',
          'Elixir.Timex.Comparable.Timex.AmbiguousDateTime',
          'Elixir.Timex.Comparable.Timex.Date',
          'Elixir.Timex.Comparable.Timex.DateTime',
          'Elixir.Timex.Comparable.Tuple','Elixir.Timex.Constants',
          'Elixir.Timex.Convertable','Elixir.Timex.Convertable.Atom',
          'Elixir.Timex.Convertable.Map',
          'Elixir.Timex.Convertable.Timex.Date',
          'Elixir.Timex.Convertable.Timex.DateTime',
          'Elixir.Timex.Convertable.Tuple','Elixir.Timex.Date',
          'Elixir.Timex.DateTime','Elixir.Timex.Format.DateTime.Formatter',
          'Elixir.Timex.Format.DateTime.Formatters.Default',
          'Elixir.Timex.Format.DateTime.Formatters.Relative',
          'Elixir.Timex.Format.DateTime.Formatters.Strftime',
          'Elixir.Timex.Format.FormatError',
          'Elixir.Timex.Format.Time.Formatter',
          'Elixir.Timex.Format.Time.Formatters.Default',
          'Elixir.Timex.Format.Time.Formatters.Humanized',
          'Elixir.Timex.Gettext','Elixir.Timex.Helpers',
          'Elixir.Timex.Interval','Elixir.Timex.Interval.FormatError',
          'Elixir.Timex.Macros','Elixir.Timex.Parse.DateTime.Helpers',
          'Elixir.Timex.Parse.DateTime.Parser',
          'Elixir.Timex.Parse.DateTime.Parsers',
          'Elixir.Timex.Parse.DateTime.Tokenizer',
          'Elixir.Timex.Parse.DateTime.Tokenizers.Default',
          'Elixir.Timex.Parse.DateTime.Tokenizers.Directive',
          'Elixir.Timex.Parse.DateTime.Tokenizers.Strftime',
          'Elixir.Timex.Parse.ParseError',
          'Elixir.Timex.Parse.Timezones.Posix',
          'Elixir.Timex.Parse.Timezones.Posix.PosixTimezone',
          'Elixir.Timex.Parse.ZoneInfo.Parser',
          'Elixir.Timex.Parse.ZoneInfo.Parser.Header',
          'Elixir.Timex.Parse.ZoneInfo.Parser.LeapSecond',
          'Elixir.Timex.Parse.ZoneInfo.Parser.TransitionInfo',
          'Elixir.Timex.Parse.ZoneInfo.Parser.Zone','Elixir.Timex.Time',
          'Elixir.Timex.Timezone','Elixir.Timex.Timezone.Database',
          'Elixir.Timex.Timezone.Local','Elixir.Timex.TimezoneInfo',
          'Elixir.Timex.Translator','Elixir.Timex.Types',
          'Elixir.Timex.Utils']},
     {path,["$ROOT/lib/quantum-1.7.1/ebin"]},
     {primLoad,
         ['Elixir.Quantum','Elixir.Quantum.Application',
          'Elixir.Quantum.Executor','Elixir.Quantum.Job',
          'Elixir.Quantum.Matcher','Elixir.Quantum.Normalizer',
          'Elixir.Quantum.Parser','Elixir.Quantum.Supervisor',
          'Elixir.Quantum.Timer','Elixir.Quantum.Translator']},
     {path,["$ROOT/lib/random_tweets-0.0.1/ebin"]},
     {primLoad,
         ['Elixir.RandomTweets','Elixir.RandomTweets.CLI',
          'Elixir.RandomTweets.File']},
     {path,["$ROOT/lib/iex-1.2.6/ebin"]},
     {primLoad,
         ['Elixir.IEx','Elixir.IEx.App','Elixir.IEx.Autocomplete',
          'Elixir.IEx.CLI','Elixir.IEx.Config','Elixir.IEx.Evaluator',
          'Elixir.IEx.Helpers','Elixir.IEx.History',
          'Elixir.IEx.History.State','Elixir.IEx.Info','Elixir.IEx.Info.Any',
          'Elixir.IEx.Info.Atom','Elixir.IEx.Info.BitString',
          'Elixir.IEx.Info.Float','Elixir.IEx.Info.Function',
          'Elixir.IEx.Info.Integer','Elixir.IEx.Info.List',
          'Elixir.IEx.Info.Map','Elixir.IEx.Info.PID','Elixir.IEx.Info.Port',
          'Elixir.IEx.Info.Reference','Elixir.IEx.Info.Tuple',
          'Elixir.IEx.Introspection','Elixir.IEx.Remsh','Elixir.IEx.Server',
          'Elixir.IEx.State']},
     {path,["$ROOT/lib/sasl-2.7/ebin"]},
     {primLoad,
         [alarm_handler,erlsrv,format_lib_supp,misc_supp,overload,rb,
          rb_format_supp,release_handler,release_handler_1,sasl,sasl_report,
          sasl_report_file_h,sasl_report_tty_h,si,si_sasl_supp,systools,
          systools_lib,systools_make,systools_rc,systools_relup]},
     {progress,modules_loaded},
     {path,
         ["$ROOT/lib/kernel-4.2/ebin","$ROOT/lib/stdlib-2.8/ebin",
          "$ROOT/lib/compiler-6.0.3/ebin","$ROOT/lib/elixir-1.2.6/ebin",
          "$ROOT/lib/poison-1.5.2/ebin","$ROOT/lib/crypto-3.6.3/ebin",
          "$ROOT/lib/asn1-4.0.2/ebin","$ROOT/lib/public_key-1.1.1/ebin",
          "$ROOT/lib/ssl-7.3/ebin","$ROOT/lib/inets-6.2/ebin",
          "$ROOT/lib/extwitter-0.7.1/ebin","$ROOT/lib/oauth-1.5.0/ebin",
          "$ROOT/lib/combine-0.8.0/ebin","$ROOT/lib/logger-1.2.6/ebin",
          "$ROOT/lib/gettext-0.11.0/ebin","$ROOT/lib/metrics-1.0.1/ebin",
          "$ROOT/lib/ssl_verify_fun-1.1.0/ebin",
          "$ROOT/lib/certifi-0.4.0/ebin","$ROOT/lib/mimerl-1.0.2/ebin",
          "$ROOT/lib/idna-1.2.0/ebin","$ROOT/lib/hackney-1.6.0/ebin",
          "$ROOT/lib/tzdata-0.5.8/ebin","$ROOT/lib/timex-2.1.6/ebin",
          "$ROOT/lib/quantum-1.7.1/ebin","$ROOT/lib/random_tweets-0.0.1/ebin",
          "$ROOT/lib/iex-1.2.6/ebin","$ROOT/lib/sasl-2.7/ebin"]},
     {kernelProcess,heart,{heart,start,[]}},
     {kernelProcess,error_logger,{error_logger,start_link,[]}},
     {kernelProcess,application_controller,
         {application_controller,start,
             [{application,kernel,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"4.2"},
                   {id,[]},
                   {modules,
                       [application,application_controller,application_master,
                        application_starter,auth,code,code_server,dist_util,
                        erl_boot_server,erl_distribution,erl_reply,
                        error_handler,error_logger,file,file_server,
                        file_io_server,global,global_group,global_search,
                        group,heart,hipe_unified_loader,inet6_tcp,
                        inet6_tcp_dist,inet6_udp,inet6_sctp,inet_config,
                        inet_hosts,inet_gethost_native,inet_tcp_dist,kernel,
                        kernel_config,net,net_adm,net_kernel,os,ram_file,rpc,
                        user,user_drv,user_sup,disk_log,disk_log_1,
                        disk_log_server,disk_log_sup,dist_ac,erl_ddll,
                        erl_epmd,erts_debug,gen_tcp,gen_udp,gen_sctp,inet,
                        inet_db,inet_dns,inet_parse,inet_res,inet_tcp,
                        inet_udp,inet_sctp,pg2,seq_trace,standard_error,
                        wrap_log_reader]},
                   {registered,
                       [application_controller,erl_reply,auth,boot_server,
                        code_server,disk_log_server,disk_log_sup,
                        erl_prim_loader,error_logger,file_server_2,
                        fixtable_server,global_group,global_name_server,heart,
                        init,kernel_config,kernel_sup,net_kernel,net_sup,rex,
                        user,os_server,ddll_server,erl_epmd,inet_db,pg2]},
                   {applications,[]},
                   {included_applications,[]},
                   {env,[{error_logger,tty}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{kernel,[]}}]}]}},
     {progress,init_kernel_started},
     {apply,
         {application,load,
             [{application,stdlib,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"2.8"},
                   {id,[]},
                   {modules,
                       [array,base64,beam_lib,binary,c,calendar,dets,
                        dets_server,dets_sup,dets_utils,dets_v8,dets_v9,dict,
                        digraph,digraph_utils,edlin,edlin_expand,epp,
                        eval_bits,erl_anno,erl_bits,erl_compile,erl_eval,
                        erl_expand_records,erl_internal,erl_lint,erl_parse,
                        erl_posix_msg,erl_pp,erl_scan,erl_tar,
                        error_logger_file_h,error_logger_tty_h,escript,ets,
                        file_sorter,filelib,filename,gb_trees,gb_sets,gen,
                        gen_event,gen_fsm,gen_server,io,io_lib,io_lib_format,
                        io_lib_fread,io_lib_pretty,lib,lists,log_mf_h,maps,
                        math,ms_transform,orddict,ordsets,otp_internal,pool,
                        proc_lib,proplists,qlc,qlc_pt,queue,rand,random,re,
                        sets,shell,shell_default,slave,sofs,string,supervisor,
                        supervisor_bridge,sys,timer,unicode,win32reg,zip]},
                   {registered,
                       [timer_server,rsh_starter,take_over_monitor,
                        pool_master,dets]},
                   {applications,[kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,compiler,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"6.0.3"},
                   {id,[]},
                   {modules,
                       [beam_a,beam_asm,beam_block,beam_bool,beam_bsm,
                        beam_clean,beam_dead,beam_dict,beam_disasm,
                        beam_except,beam_flatten,beam_jump,beam_listing,
                        beam_opcodes,beam_peep,beam_receive,beam_split,
                        beam_trim,beam_type,beam_utils,beam_validator,beam_z,
                        cerl,cerl_clauses,cerl_inline,cerl_sets,cerl_trees,
                        compile,core_scan,core_lint,core_parse,core_pp,
                        core_lib,erl_bifs,rec_env,sys_core_dsetel,
                        sys_core_fold,sys_core_fold_lists,sys_core_inline,
                        sys_pre_attributes,sys_pre_expand,v3_codegen,v3_core,
                        v3_kernel,v3_kernel_pp,v3_life]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,elixir,
                  [{description,"elixir"},
                   {vsn,"1.2.6"},
                   {id,[]},
                   {modules,
                       ['Elixir.Access','Elixir.Agent','Elixir.Agent.Server',
                        'Elixir.Application','Elixir.ArgumentError',
                        'Elixir.ArithmeticError','Elixir.Atom',
                        'Elixir.BadArityError','Elixir.BadFunctionError',
                        'Elixir.BadMapError','Elixir.BadStructError',
                        'Elixir.Base','Elixir.Behaviour','Elixir.Bitwise',
                        'Elixir.CaseClauseError','Elixir.Code',
                        'Elixir.Code.LoadError','Elixir.Collectable',
                        'Elixir.Collectable.BitString',
                        'Elixir.Collectable.File.Stream',
                        'Elixir.Collectable.HashDict',
                        'Elixir.Collectable.HashSet',
                        'Elixir.Collectable.IO.Stream',
                        'Elixir.Collectable.List','Elixir.Collectable.Map',
                        'Elixir.Collectable.MapSet','Elixir.CompileError',
                        'Elixir.CondClauseError','Elixir.Dict','Elixir.Enum',
                        'Elixir.Enum.EmptyError',
                        'Elixir.Enum.OutOfBoundsError','Elixir.Enumerable',
                        'Elixir.Enumerable.File.Stream',
                        'Elixir.Enumerable.Function',
                        'Elixir.Enumerable.GenEvent.Stream',
                        'Elixir.Enumerable.HashDict',
                        'Elixir.Enumerable.HashSet',
                        'Elixir.Enumerable.IO.Stream',
                        'Elixir.Enumerable.List','Elixir.Enumerable.Map',
                        'Elixir.Enumerable.MapSet','Elixir.Enumerable.Range',
                        'Elixir.Enumerable.Stream','Elixir.ErlangError',
                        'Elixir.Exception','Elixir.File',
                        'Elixir.File.CopyError','Elixir.File.Error',
                        'Elixir.File.Stat','Elixir.File.Stream',
                        'Elixir.Float','Elixir.FunctionClauseError',
                        'Elixir.GenEvent','Elixir.GenEvent.Stream',
                        'Elixir.GenServer','Elixir.HashDict','Elixir.HashSet',
                        'Elixir.IO','Elixir.IO.ANSI','Elixir.IO.ANSI.Docs',
                        'Elixir.IO.ANSI.Sequence','Elixir.IO.Stream',
                        'Elixir.IO.StreamError','Elixir.Inspect',
                        'Elixir.Inspect.Algebra','Elixir.Inspect.Any',
                        'Elixir.Inspect.Atom','Elixir.Inspect.BitString',
                        'Elixir.Inspect.Error','Elixir.Inspect.Float',
                        'Elixir.Inspect.Function','Elixir.Inspect.HashDict',
                        'Elixir.Inspect.HashSet','Elixir.Inspect.Integer',
                        'Elixir.Inspect.List','Elixir.Inspect.Map',
                        'Elixir.Inspect.MapSet','Elixir.Inspect.Opts',
                        'Elixir.Inspect.PID','Elixir.Inspect.Port',
                        'Elixir.Inspect.Range','Elixir.Inspect.Reference',
                        'Elixir.Inspect.Regex','Elixir.Inspect.Stream',
                        'Elixir.Inspect.Tuple','Elixir.Inspect.Version',
                        'Elixir.Inspect.Version.Requirement','Elixir.Integer',
                        'Elixir.Kernel','Elixir.Kernel.CLI',
                        'Elixir.Kernel.ErrorHandler',
                        'Elixir.Kernel.LexicalTracker',
                        'Elixir.Kernel.ParallelCompiler',
                        'Elixir.Kernel.ParallelRequire',
                        'Elixir.Kernel.SpecialForms','Elixir.Kernel.Typespec',
                        'Elixir.Kernel.Utils','Elixir.KeyError',
                        'Elixir.Keyword','Elixir.List','Elixir.List.Chars',
                        'Elixir.List.Chars.Atom',
                        'Elixir.List.Chars.BitString',
                        'Elixir.List.Chars.Float','Elixir.List.Chars.Integer',
                        'Elixir.List.Chars.List','Elixir.Macro',
                        'Elixir.Macro.Env','Elixir.Map','Elixir.MapSet',
                        'Elixir.MatchError','Elixir.Module',
                        'Elixir.Module.LocalsTracker','Elixir.Node',
                        'Elixir.OptionParser','Elixir.Path',
                        'Elixir.Path.Wildcard','Elixir.Port','Elixir.Process',
                        'Elixir.Protocol','Elixir.Protocol.UndefinedError',
                        'Elixir.Range','Elixir.Record',
                        'Elixir.Record.Extractor','Elixir.Regex',
                        'Elixir.Regex.CompileError','Elixir.RuntimeError',
                        'Elixir.Set','Elixir.Stream','Elixir.Stream.Reducers',
                        'Elixir.String','Elixir.String.Break',
                        'Elixir.String.Casing','Elixir.String.Chars',
                        'Elixir.String.Chars.Atom',
                        'Elixir.String.Chars.BitString',
                        'Elixir.String.Chars.Float',
                        'Elixir.String.Chars.Integer',
                        'Elixir.String.Chars.List','Elixir.String.Chars.URI',
                        'Elixir.String.Chars.Version',
                        'Elixir.String.Chars.Version.Requirement',
                        'Elixir.String.Normalizer','Elixir.String.Unicode',
                        'Elixir.StringIO','Elixir.Supervisor',
                        'Elixir.Supervisor.Default','Elixir.Supervisor.Spec',
                        'Elixir.SyntaxError','Elixir.System',
                        'Elixir.SystemLimitError','Elixir.Task',
                        'Elixir.Task.Supervised','Elixir.Task.Supervisor',
                        'Elixir.TokenMissingError','Elixir.TryClauseError',
                        'Elixir.Tuple','Elixir.URI',
                        'Elixir.UndefinedFunctionError',
                        'Elixir.UnicodeConversionError','Elixir.Version',
                        'Elixir.Version.InvalidRequirementError',
                        'Elixir.Version.InvalidVersionError',
                        'Elixir.Version.Parser','Elixir.Version.Parser.DSL',
                        'Elixir.Version.Requirement',elixir,elixir_aliases,
                        elixir_bitstring,elixir_bootstrap,elixir_clauses,
                        elixir_code_server,elixir_compiler,elixir_config,
                        elixir_counter,elixir_def,elixir_def_defaults,
                        elixir_def_overridable,elixir_dispatch,elixir_env,
                        elixir_errors,elixir_exp,elixir_exp_clauses,elixir_fn,
                        elixir_for,elixir_import,elixir_interpolation,
                        elixir_lexical,elixir_locals,elixir_map,elixir_module,
                        elixir_parser,elixir_quote,elixir_rewrite,
                        elixir_scope,elixir_sup,elixir_tokenizer,
                        elixir_translator,elixir_try,elixir_utils,
                        elixir_with]},
                   {registered,[elixir_config,elixir_code_server]},
                   {applications,[stdlib,kernel,compiler]},
                   {included_applications,[]},
                   {env,[{ansi_enabled,false}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{elixir,[]}}]}]}},
     {apply,
         {application,load,
             [{application,poison,
                  [{description,"The fastest JSON library for Elixir"},
                   {vsn,"1.5.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Poison','Elixir.Poison.Decode',
                        'Elixir.Poison.Decoder','Elixir.Poison.Decoder.Any',
                        'Elixir.Poison.Encode','Elixir.Poison.EncodeError',
                        'Elixir.Poison.Encoder','Elixir.Poison.Encoder.Any',
                        'Elixir.Poison.Encoder.Atom',
                        'Elixir.Poison.Encoder.BitString',
                        'Elixir.Poison.Encoder.Float',
                        'Elixir.Poison.Encoder.HashDict',
                        'Elixir.Poison.Encoder.HashSet',
                        'Elixir.Poison.Encoder.Integer',
                        'Elixir.Poison.Encoder.List',
                        'Elixir.Poison.Encoder.Map',
                        'Elixir.Poison.Encoder.Range',
                        'Elixir.Poison.Encoder.Stream','Elixir.Poison.Parser',
                        'Elixir.Poison.Pretty','Elixir.Poison.SyntaxError']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,crypto,
                  [{description,"CRYPTO"},
                   {vsn,"3.6.3"},
                   {id,[]},
                   {modules,[crypto,crypto_ec_curves]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,asn1,
                  [{description,"The Erlang ASN1 compiler version 4.0.2"},
                   {vsn,"4.0.2"},
                   {id,[]},
                   {modules,[asn1rt,asn1rt_nif]},
                   {registered,[asn1_ns,asn1db]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,public_key,
                  [{description,"Public key infrastructure"},
                   {vsn,"1.1.1"},
                   {id,[]},
                   {modules,
                       [public_key,pubkey_pem,pubkey_pbe,pubkey_ssh,
                        pubkey_cert,pubkey_cert_records,pubkey_crl,
                        'OTP-PUB-KEY','PKCS-FRAME']},
                   {registered,[]},
                   {applications,[stdlib,kernel,crypto,asn1]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ssl,
                  [{description,"Erlang/OTP SSL application"},
                   {vsn,"7.3"},
                   {id,[]},
                   {modules,
                       [tls_connection,tls_handshake,tls_record,tls_v1,ssl_v3,
                        ssl_v2,dtls_connection,dtls_handshake,dtls_record,
                        dtls_v1,ssl,tls,dtls,ssl_session_cache_api,ssl_config,
                        ssl_connection,ssl_handshake,ssl_record,ssl_cipher,
                        ssl_srp_primes,ssl_alert,ssl_socket,
                        ssl_listen_tracker_sup,inet_tls_dist,inet6_tls_dist,
                        ssl_tls_dist_proxy,ssl_dist_sup,ssl_session,
                        ssl_session_cache,ssl_manager,ssl_pkix_db,
                        ssl_certificate,ssl_crl,ssl_crl_cache,
                        ssl_crl_cache_api,ssl_app,ssl_sup,tls_connection_sup,
                        dtls_connection_sup]},
                   {registered,[ssl_sup,ssl_manager]},
                   {applications,[stdlib,kernel,crypto,public_key]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ssl_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,inets,
                  [{description,"INETS  CXC 138 49"},
                   {vsn,"6.2"},
                   {id,[]},
                   {modules,
                       [inets,inets_sup,inets_app,inets_service,inets_trace,
                        inets_lib,inets_time_compat,ftp,ftp_progress,
                        ftp_response,ftp_sup,httpc,httpc_handler,
                        httpc_handler_sup,httpc_manager,httpc_profile_sup,
                        httpc_request,httpc_response,httpc_sup,httpc_cookie,
                        http_uri,http_chunk,http_request,http_response,
                        http_transport,http_util,httpd,httpd_acceptor,
                        httpd_acceptor_sup,httpd_cgi,httpd_connection_sup,
                        httpd_conf,httpd_custom,httpd_custom_api,httpd_esi,
                        httpd_example,httpd_file,httpd_instance_sup,httpd_log,
                        httpd_manager,httpd_misc_sup,httpd_request,
                        httpd_request_handler,httpd_response,httpd_script_env,
                        httpd_socket,httpd_sup,httpd_util,mod_actions,
                        mod_alias,mod_auth,mod_auth_dets,mod_auth_mnesia,
                        mod_auth_plain,mod_auth_server,mod_browser,mod_cgi,
                        mod_dir,mod_disk_log,mod_esi,mod_get,mod_head,
                        mod_htaccess,mod_log,mod_range,mod_responsecontrol,
                        mod_security,mod_security_server,mod_trace,tftp,
                        tftp_binary,tftp_engine,tftp_file,tftp_lib,
                        tftp_logger,tftp_sup]},
                   {registered,[inets_sup,httpc_manager]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{inets_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,extwitter,
                  [{description,"Twitter client library for elixir.\n"},
                   {vsn,"0.7.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.ExTwitter','Elixir.ExTwitter.API.Auth',
                        'Elixir.ExTwitter.API.Base',
                        'Elixir.ExTwitter.API.DirectMessages',
                        'Elixir.ExTwitter.API.Favorites',
                        'Elixir.ExTwitter.API.FriendsAndFollowers',
                        'Elixir.ExTwitter.API.Help',
                        'Elixir.ExTwitter.API.Lists',
                        'Elixir.ExTwitter.API.PlacesAndGeo',
                        'Elixir.ExTwitter.API.Search',
                        'Elixir.ExTwitter.API.Streaming',
                        'Elixir.ExTwitter.API.Streaming.AsyncRequest',
                        'Elixir.ExTwitter.API.Timelines',
                        'Elixir.ExTwitter.API.Trends',
                        'Elixir.ExTwitter.API.Tweets',
                        'Elixir.ExTwitter.API.Users',
                        'Elixir.ExTwitter.Config',
                        'Elixir.ExTwitter.ConnectionError',
                        'Elixir.ExTwitter.Error','Elixir.ExTwitter.JSON',
                        'Elixir.ExTwitter.Model.AccessToken',
                        'Elixir.ExTwitter.Model.Cursor',
                        'Elixir.ExTwitter.Model.DeletedTweet',
                        'Elixir.ExTwitter.Model.DirectMessage',
                        'Elixir.ExTwitter.Model.Entities',
                        'Elixir.ExTwitter.Model.Geo',
                        'Elixir.ExTwitter.Model.Limit',
                        'Elixir.ExTwitter.Model.List',
                        'Elixir.ExTwitter.Model.Place',
                        'Elixir.ExTwitter.Model.RequestToken',
                        'Elixir.ExTwitter.Model.StallWarning',
                        'Elixir.ExTwitter.Model.Trend',
                        'Elixir.ExTwitter.Model.Tweet',
                        'Elixir.ExTwitter.Model.Upload',
                        'Elixir.ExTwitter.Model.User',
                        'Elixir.ExTwitter.OAuth','Elixir.ExTwitter.Parser',
                        'Elixir.ExTwitter.Proxy',
                        'Elixir.ExTwitter.RateLimitExceededError',
                        'Elixir.ExTwitter.Supervisor']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel,crypto,ssl,inets]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.ExTwitter',[]}}]}]}},
     {apply,
         {application,load,
             [{application,oauth,
                  [{description,"An Erlang OAuth 1.0 implementation"},
                   {vsn,"1.5.0"},
                   {id,[]},
                   {modules,[oauth]},
                   {registered,[]},
                   {applications,[stdlib,kernel,crypto,inets,public_key]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,combine,
                  [{description,
                       "A parser combinator library for Elixir projects."},
                   {vsn,"0.8.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Combine','Elixir.Combine.Helpers',
                        'Elixir.Combine.ParserState',
                        'Elixir.Combine.Parsers.Base',
                        'Elixir.Combine.Parsers.Binary',
                        'Elixir.Combine.Parsers.Text']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,logger,
                  [{description,"logger"},
                   {vsn,"1.2.6"},
                   {id,[]},
                   {modules,
                       ['Elixir.Logger','Elixir.Logger.App',
                        'Elixir.Logger.Backends.Console',
                        'Elixir.Logger.Config','Elixir.Logger.ErrorHandler',
                        'Elixir.Logger.Formatter','Elixir.Logger.Translator',
                        'Elixir.Logger.Utils','Elixir.Logger.Watcher']},
                   {registered,
                       ['Elixir.Logger','Elixir.Logger.Supervisor',
                        'Elixir.Logger.Watcher']},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,
                       [{level,debug},
                        {utc_log,false},
                        {truncate,8096},
                        {backends,[console]},
                        {translators,[{'Elixir.Logger.Translator',translate}]},
                        {sync_threshold,20},
                        {handle_otp_reports,true},
                        {handle_sasl_reports,false},
                        {compile_time_purge_level,debug},
                        {compile_time_application,nil},
                        {discard_threshold_for_error_logger,500},
                        {translator_inspect_opts,[]},
                        {console,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Logger.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,gettext,
                  [{description,
                       "Internationalization and localization through gettext"},
                   {vsn,"0.11.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Gettext','Elixir.Gettext.Backend',
                        'Elixir.Gettext.Compiler','Elixir.Gettext.Error',
                        'Elixir.Gettext.Extractor',
                        'Elixir.Gettext.ExtractorAgent',
                        'Elixir.Gettext.Fuzzy','Elixir.Gettext.Interpolation',
                        'Elixir.Gettext.Merger','Elixir.Gettext.PO',
                        'Elixir.Gettext.PO.Parser',
                        'Elixir.Gettext.PO.PluralTranslation',
                        'Elixir.Gettext.PO.SyntaxError',
                        'Elixir.Gettext.PO.Tokenizer',
                        'Elixir.Gettext.PO.Translation',
                        'Elixir.Gettext.PO.Translations',
                        'Elixir.Gettext.Plural',
                        'Elixir.Gettext.Plural.UnknownLocaleError',
                        'Elixir.Mix.Tasks.Compile.Gettext',
                        'Elixir.Mix.Tasks.Gettext.Extract',
                        'Elixir.Mix.Tasks.Gettext.Merge',gettext_po_parser]},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel,logger]},
                   {included_applications,[]},
                   {env,[{default_locale,<<"en">>}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,metrics,
                  [{description,
                       "A generic interface to different metrics systems in Erlang."},
                   {vsn,"1.0.1"},
                   {id,[]},
                   {modules,
                       [metrics,metrics_dummy,metrics_exometer,
                        metrics_folsom]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ssl_verify_fun,
                  [{description,[]},
                   {vsn,"1.1.0"},
                   {id,[]},
                   {modules,[ssl_verify_fingerprint,ssl_verify_hostname]},
                   {registered,[]},
                   {applications,[stdlib,kernel,ssl]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,certifi,
                  [{description,"An OTP library"},
                   {vsn,"0.4.0"},
                   {id,[]},
                   {modules,[certifi,certifi_cacerts,certifi_weakcerts]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,mimerl,
                  [{description,"An OTP library"},
                   {vsn,"1.0.2"},
                   {id,[]},
                   {modules,[mimerl]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,idna,
                  [{description,"A pure Erlang IDNA implementation"},
                   {vsn,"1.2.0"},
                   {id,[]},
                   {modules,
                       [idna,idna_ucs,idna_unicode,idna_unicode_data1,
                        idna_unicode_data2,punycode]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,hackney,
                  [{description,"simple HTTP client for the Erlang VM"},
                   {vsn,"1.6.0"},
                   {id,[]},
                   {modules,
                       [hackney,hackney_app,hackney_bstr,hackney_connect,
                        hackney_cookie,hackney_date,hackney_headers,
                        hackney_http,hackney_http_connect,hackney_manager,
                        hackney_multipart,hackney_pool,hackney_pool_handler,
                        hackney_request,hackney_response,hackney_socks5,
                        hackney_ssl_transport,hackney_stream,hackney_sup,
                        hackney_tcp_transport,hackney_trace,hackney_url,
                        hackney_util]},
                   {registered,[]},
                   {applications,
                       [stdlib,stdlib,kernel,kernel,crypto,ssl,public_key,
                        metrics,ssl_verify_fun,certifi,mimerl,idna,asn1]},
                   {included_applications,[]},
                   {env,
                       [{timeout,150000},
                        {max_connections,50},
                        {restart,permanent},
                        {shutdown,10000},
                        {maxr,10},
                        {maxt,1}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{hackney_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,tzdata,
                  [{description,
                       "Tzdata is a parser and library for the tz database.\n"},
                   {vsn,"0.5.8"},
                   {id,[]},
                   {modules,
                       ['Elixir.Tzdata','Elixir.Tzdata.App',
                        'Elixir.Tzdata.BasicDataMap',
                        'Elixir.Tzdata.DataBuilder',
                        'Elixir.Tzdata.DataLoader','Elixir.Tzdata.EtsHolder',
                        'Elixir.Tzdata.FarFutureDynamicPeriods',
                        'Elixir.Tzdata.LeapSecParser','Elixir.Tzdata.Parser',
                        'Elixir.Tzdata.ParserOrganizer',
                        'Elixir.Tzdata.PeriodBuilder',
                        'Elixir.Tzdata.ReleaseReader',
                        'Elixir.Tzdata.ReleaseUpdater',
                        'Elixir.Tzdata.TableData','Elixir.Tzdata.TableParser',
                        'Elixir.Tzdata.Util']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel,logger,hackney]},
                   {included_applications,[]},
                   {env,[{autoupdate,enabled},{data_dir,nil}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Tzdata.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,timex,
                  [{description,
                       "Timex is a rich, comprehensive Date/Time library for Elixir projects, with full timezone support via the :tzdata package. \nIf you need to manipulate dates, times, datetimes, timestamps, etc., then Timex is for you! \n"},
                   {vsn,"2.1.6"},
                   {id,[]},
                   {modules,
                       ['Elixir.Enumerable.Timex.Interval',
                        'Elixir.Inspect.Timex.AmbiguousDateTime',
                        'Elixir.Inspect.Timex.AmbiguousTimezoneInfo',
                        'Elixir.Inspect.Timex.Date',
                        'Elixir.Inspect.Timex.DateTime',
                        'Elixir.Inspect.Timex.TimezoneInfo','Elixir.Timex',
                        'Elixir.Timex.AmbiguousDateTime',
                        'Elixir.Timex.AmbiguousTimezoneInfo',
                        'Elixir.Timex.Calendar',
                        'Elixir.Timex.Calendar.Gregorian',
                        'Elixir.Timex.Calendar.Julian',
                        'Elixir.Timex.Comparable',
                        'Elixir.Timex.Comparable.Timex.AmbiguousDateTime',
                        'Elixir.Timex.Comparable.Timex.Date',
                        'Elixir.Timex.Comparable.Timex.DateTime',
                        'Elixir.Timex.Comparable.Tuple',
                        'Elixir.Timex.Constants','Elixir.Timex.Convertable',
                        'Elixir.Timex.Convertable.Atom',
                        'Elixir.Timex.Convertable.Map',
                        'Elixir.Timex.Convertable.Timex.Date',
                        'Elixir.Timex.Convertable.Timex.DateTime',
                        'Elixir.Timex.Convertable.Tuple','Elixir.Timex.Date',
                        'Elixir.Timex.DateTime',
                        'Elixir.Timex.Format.DateTime.Formatter',
                        'Elixir.Timex.Format.DateTime.Formatters.Default',
                        'Elixir.Timex.Format.DateTime.Formatters.Relative',
                        'Elixir.Timex.Format.DateTime.Formatters.Strftime',
                        'Elixir.Timex.Format.FormatError',
                        'Elixir.Timex.Format.Time.Formatter',
                        'Elixir.Timex.Format.Time.Formatters.Default',
                        'Elixir.Timex.Format.Time.Formatters.Humanized',
                        'Elixir.Timex.Gettext','Elixir.Timex.Helpers',
                        'Elixir.Timex.Interval',
                        'Elixir.Timex.Interval.FormatError',
                        'Elixir.Timex.Macros',
                        'Elixir.Timex.Parse.DateTime.Helpers',
                        'Elixir.Timex.Parse.DateTime.Parser',
                        'Elixir.Timex.Parse.DateTime.Parsers',
                        'Elixir.Timex.Parse.DateTime.Tokenizer',
                        'Elixir.Timex.Parse.DateTime.Tokenizers.Default',
                        'Elixir.Timex.Parse.DateTime.Tokenizers.Directive',
                        'Elixir.Timex.Parse.DateTime.Tokenizers.Strftime',
                        'Elixir.Timex.Parse.ParseError',
                        'Elixir.Timex.Parse.Timezones.Posix',
                        'Elixir.Timex.Parse.Timezones.Posix.PosixTimezone',
                        'Elixir.Timex.Parse.ZoneInfo.Parser',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.Header',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.LeapSecond',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.TransitionInfo',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.Zone',
                        'Elixir.Timex.Time','Elixir.Timex.Timezone',
                        'Elixir.Timex.Timezone.Database',
                        'Elixir.Timex.Timezone.Local',
                        'Elixir.Timex.TimezoneInfo','Elixir.Timex.Translator',
                        'Elixir.Timex.Types','Elixir.Timex.Utils']},
                   {registered,[]},
                   {applications,
                       [elixir,stdlib,kernel,combine,logger,gettext,tzdata]},
                   {included_applications,[]},
                   {env,[{local_timezone,nil},{default_locale,<<"en">>}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,quantum,
                  [{description,"Cron-like job scheduler for Elixir."},
                   {vsn,"1.7.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Quantum','Elixir.Quantum.Application',
                        'Elixir.Quantum.Executor','Elixir.Quantum.Job',
                        'Elixir.Quantum.Matcher','Elixir.Quantum.Normalizer',
                        'Elixir.Quantum.Parser','Elixir.Quantum.Supervisor',
                        'Elixir.Quantum.Timer','Elixir.Quantum.Translator']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel,timex]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Quantum.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,random_tweets,
                  [{description,"random_tweets"},
                   {vsn,"0.0.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.RandomTweets','Elixir.RandomTweets.CLI',
                        'Elixir.RandomTweets.File']},
                   {registered,[]},
                   {applications,
                       [elixir,stdlib,kernel,poison,extwitter,oauth,logger,
                        quantum]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.RandomTweets',[]}}]}]}},
     {apply,
         {application,load,
             [{application,iex,
                  [{description,"iex"},
                   {vsn,"1.2.6"},
                   {id,[]},
                   {modules,
                       ['Elixir.IEx','Elixir.IEx.App',
                        'Elixir.IEx.Autocomplete','Elixir.IEx.CLI',
                        'Elixir.IEx.Config','Elixir.IEx.Evaluator',
                        'Elixir.IEx.Helpers','Elixir.IEx.History',
                        'Elixir.IEx.History.State','Elixir.IEx.Info',
                        'Elixir.IEx.Info.Any','Elixir.IEx.Info.Atom',
                        'Elixir.IEx.Info.BitString','Elixir.IEx.Info.Float',
                        'Elixir.IEx.Info.Function','Elixir.IEx.Info.Integer',
                        'Elixir.IEx.Info.List','Elixir.IEx.Info.Map',
                        'Elixir.IEx.Info.PID','Elixir.IEx.Info.Port',
                        'Elixir.IEx.Info.Reference','Elixir.IEx.Info.Tuple',
                        'Elixir.IEx.Introspection','Elixir.IEx.Remsh',
                        'Elixir.IEx.Server','Elixir.IEx.State']},
                   {registered,['Elixir.IEx.Supervisor','Elixir.IEx.Config']},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,
                       [{autocomplete_server,'Elixir.IEx.Server'},
                        {colors,[]},
                        {inspect,[]},
                        {history_size,20},
                        {default_prompt,<<"%prefix(%counter)>">>},
                        {alive_prompt,<<"%prefix(%node)%counter>">>}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.IEx.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,sasl,
                  [{description,"SASL  CXC 138 11"},
                   {vsn,"2.7"},
                   {id,[]},
                   {modules,
                       [sasl,alarm_handler,format_lib_supp,misc_supp,overload,
                        rb,rb_format_supp,release_handler,release_handler_1,
                        erlsrv,sasl_report,sasl_report_tty_h,
                        sasl_report_file_h,si,si_sasl_supp,systools,
                        systools_make,systools_rc,systools_relup,
                        systools_lib]},
                   {registered,
                       [sasl_sup,alarm_handler,overload,release_handler]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[{sasl_error_logger,tty},{errlog_type,all}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{sasl,[]}}]}]}},
     {progress,applications_loaded},
     {apply,{application,start_boot,[kernel,permanent]}},
     {apply,{application,start_boot,[stdlib,permanent]}},
     {apply,{application,start_boot,[compiler,permanent]}},
     {apply,{application,start_boot,[elixir,permanent]}},
     {apply,{application,start_boot,[poison,permanent]}},
     {apply,{application,start_boot,[crypto,permanent]}},
     {apply,{application,start_boot,[asn1,permanent]}},
     {apply,{application,start_boot,[public_key,permanent]}},
     {apply,{application,start_boot,[ssl,permanent]}},
     {apply,{application,start_boot,[inets,permanent]}},
     {apply,{application,start_boot,[extwitter,permanent]}},
     {apply,{application,start_boot,[oauth,permanent]}},
     {apply,{application,start_boot,[combine,permanent]}},
     {apply,{application,start_boot,[logger,permanent]}},
     {apply,{application,start_boot,[gettext,permanent]}},
     {apply,{application,start_boot,[metrics,permanent]}},
     {apply,{application,start_boot,[ssl_verify_fun,permanent]}},
     {apply,{application,start_boot,[certifi,permanent]}},
     {apply,{application,start_boot,[mimerl,permanent]}},
     {apply,{application,start_boot,[idna,permanent]}},
     {apply,{application,start_boot,[hackney,permanent]}},
     {apply,{application,start_boot,[tzdata,permanent]}},
     {apply,{application,start_boot,[timex,permanent]}},
     {apply,{application,start_boot,[quantum,permanent]}},
     {apply,{application,start_boot,[random_tweets,permanent]}},
     {apply,{application,start_boot,[iex,permanent]}},
     {apply,{application,start_boot,[sasl,permanent]}},
     {apply,{c,erlangrc,[]}},
     {progress,started}]}.
